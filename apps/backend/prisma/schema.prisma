// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int           @id @default(autoincrement())
  email            String        @unique @map("email")
  password         String        @map("password")
  refreshToken     String?       @map("refresh_token")
  createdAt        DateTime      @default(now()) @map("created_at")
  updatedAt        DateTime      @updatedAt @map("updated_at")
  messagesSent     Message[]     @relation("SentMessages")
  messagesReceived Message[]     @relation("ReceivedMessages")
  subscription     Subscription?

  @@map("users")
}

model Message {
  id         Int           @id @default(autoincrement()) @map("id")
  senderId   Int           @map("sender_id")
  receiverId Int           @map("receiver_id")
  text       String        @map("text")
  createdAt  DateTime      @default(now()) @map("created_at")
  status     MessageStatus @default(SENT) @map("status")

  sender   User @relation("SentMessages", fields: [senderId], references: [id])
  receiver User @relation("ReceivedMessages", fields: [receiverId], references: [id])

  @@map("message")
}

enum MessageStatus {
  SENT
  READ
}

model Subscription {
  id                   Int       @id @default(autoincrement()) @map("id")
  userId               Int       @unique @map("user_id")
  user                 User      @relation(fields: [userId], references: [id])
  planType             PlanType  @default(BASIC) @map("plan_type")
  stripeCustomerId     String?   @map("stripe_customer_id")
  stripeSubscriptionId String?   @map("stripe_subscription_id")
  status               SubStatus @default(ACTIVE) @map("status")
  currentPeriodStart   DateTime? @map("current_period_start")
  currentPeriodEnd     DateTime? @map("current_period_end")
  createdAt            DateTime  @default(now()) @map("created_at")
  updatedAt            DateTime  @updatedAt @map("updated_at")
}

enum PlanType {
  BASIC
  PLUS
  PREMIUM
}

enum SubStatus {
  ACTIVE
  CANCELED
  PAST_DUE
  UNPAID
  INCOMPLETE
}
