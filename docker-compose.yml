services:
  frontend:
    build: ./apps/frontend
    ports:
      - "5173:5173"
    environment:
      - VITE_STRIPE_PUBLISHABLE_KEY=${VITE_STRIPE_PUBLISHABLE_KEY}
      - VITE_API_URL=${VITE_API_URL}
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    command: ["npm", "run", "dev"]
    depends_on:
      - backend
    env_file:
      - .env

  backend:
    build: ./apps/backend
    ports:
      - "4000:4000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - STRIPE_BASIC_PRICE_ID=${STRIPE_BASIC_PRICE_ID}
      - STRIPE_PLUS_PRICE_ID=${STRIPE_PLUS_PRICE_ID}
      - STRIPE_PREMIUM_PRICE_ID=${STRIPE_PREMIUM_PRICE_ID}
      - FRONTEND_URL=${FRONTEND_URL}
    volumes:
      - ./apps/backend:/app
      - /app/node_modules
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  stripe-listener:
    image: stripe/stripe-cli:v1.22.0
    command: [
      "listen",
      "--api-key", "${STRIPE_SECRET_KEY}",
      "--forward-to", "backend:4000/payment/webhook"
    ]
    environment:
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
    depends_on:
      - backend

  directus:
    image: directus/directus:latest
    restart: always
    ports:
      - "8055:8055"
    environment:
      - KEY=${DIRECTUS_KEY}
      - SECRET=${DIRECTUS_SECRET}
      - ADMIN_EMAIL=${DIRECTUS_ADMIN_EMAIL}
      - ADMIN_PASSWORD=${DIRECTUS_ADMIN_PASSWORD}
      - DB_CLIENT=pg
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=${POSTGRES_DB}
      - DB_USER=${POSTGRES_USER}
      - DB_PASSWORD=${POSTGRES_PASSWORD}
      - WEBSOCKETS_ENABLED=true
    volumes:
      - ./apps/directus/uploads:/directus/uploads
      - ./apps/directus/extensions:/directus/extensions
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    command: [ "postgres", "-p", "5432" ]
    env_file:
      - .env

volumes:
  pgdata: